{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","/home/anqurvanillapy/Dev/web/apps/jeezhu-webapp/src/js/app.js","module","appF7","Framework7","material","modalTitle","$$","addView","Dom7","on","page","setTimeout","pullToRefreshDone","Vue","el","data","newTodo","todos","text","methods","addTodo","this","trim","push","removeTodo","index","splice"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,iEAAA,SAAAT,EAAAU,EAAAJ,GCMA,GAAAK,GAAA,GAAAC,aACAC,UAAA,EACAC,WAAA,WAKAC,GAFAJ,EAAAK,QAAA,iBAEAC,KAEAF,GAAA,4BAAAG,GAAA,UAAA,SAAAC,GACAC,WAAA,WAAAT,EAAAU,qBAAA,OASA,GAAAC,MACAC,GAAA,QACAC,MACAC,QAAA,GACAC,QACAC,KAAA,yBAGAC,SACAC,QAAA,WACA,GAAAF,GAAAG,KAAAL,QAAAM,MACAJ,KACAG,KAAAJ,MAAAM,MAAAL,KAAAA,IACAG,KAAAL,QAAA,KAGAQ,WAAA,SAAAC,GACAJ,KAAAJ,MAAAS,OAAAD,EAAA,iBC+KW","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n *  ==================================\n *  Code for Framework7 initialization\n *  ==================================\n */\n\nvar appF7 = new Framework7({\n  material: true,\n  modalTitle: 'Jeezhu'\n})\n\nvar appF7MainView = appF7.addView('.view-main', {})\n\nvar $$ = Dom7\n\n$$('.pull-to-refresh-content').on('refresh', function (page) {\n  setTimeout(function () { appF7.pullToRefreshDone() }, 1000)\n})\n\n/**\n *  =================\n *  Code for Vue todo\n *  =================\n */\n\nnew Vue({\n  el: '#todo',\n  data: {\n    newTodo: '',\n    todos: [\n      { text: 'Review the lessons!' }\n    ]\n  },\n  methods: {\n    addTodo: function () {\n      var text = this.newTodo.trim()\n      if (text) {\n        this.todos.push({ text: text })\n        this.newTodo = ''\n      }\n    },\n    removeTodo: function (index) {\n      this.todos.splice(index, 1)\n    }\n  }\n})\n\n/**\n *  ==============================\n *  Preview code from PWA examples\n *  ==============================\n */\n\n// (function () {\n//   'use strict'\n\n  /**\n   *  =============\n   *  App meta data\n   *  =============\n   */\n\n  // var initWidget = {\n  //   key: 'recmenu',\n  //   label: '菜单推荐',\n  //   content: [ '叉烧滑蛋饭' ]\n  // }\n\n  // var app = {\n  //   isLoading: true,\n  //   hasRequestPending: false,\n  //   visibleCards: {},\n  //   selectedWidgets: [],\n  //   spinner: document.querySelector('.loader'),\n  //   cardTemplate: document.querySelector('.cardTemplate'),\n  //   container: document.querySelector('.main'),\n  //   addDialog: document.querySelector('.dialog-container')\n  // }\n\n  /**\n   *  =================================\n   *  Event listeners for UI components\n   *  =================================\n   */\n\n  // document.getElementById('butAdd').addEventListener('click', function () {\n  //   app.toggleAddDialog(true)\n  // })\n\n  // document.getElementById('butAddWidget').addEventListener('click', function () {\n  //   var select = document.getElementById('selectWidgetToAdd')\n  //   var selected = select.options[select.selectedIndex]\n  //   var key = selected.value\n  //   var label = selected.textContent\n  //   app.getWidget(key, label)\n  //   app.selectedWidgets.push({key: key, label: label})\n  //   app.saveSelectedWidgets()\n  //   app.toggleAddDialog(false)\n  // })\n\n  // document.getElementById('butAddCancel').addEventListener('click', function () {\n  //   app.toggleAddDialog(false)\n  // })\n\n  /**\n   *  ======================================\n   *  Methods for updating and refreshing UI\n   *  ======================================\n   */\n\n  // app.toggleAddDialog = function (visible) {\n  //   if (visible) {\n  //     app.addDialog.classList.add('dialog-container-visible')\n  //   } else {\n  //     app.addDialog.classList.remove('dialog-container-visible')\n  //   }\n  // }\n\n  // app.updateWidgetCard = function (data) {\n  //   var card = app.visibleCards[data.key]\n  //   if (!card) {\n  //     card = app.cardTemplate.cloneNode(true)\n  //     card.classList.remove('cardTemplate')\n  //     card.querySelector('.card-title').textContent = data.label\n  //     card.removeAttribute('hidden')\n  //     app.container.appendChild(card)\n  //     app.visibleCards[data.key] = card\n  //   }\n  //   var pick = data.content\n  //   pick = pick[Math.floor(Math.random() * pick.length)]\n  //   card.querySelector('.card-body').textContent = pick\n  //   if (app.isLoading) {\n  //     app.spinner.setAttribute('hidden', true)\n  //     app.container.removeAttribute('hidden')\n  //     app.isLoading = false\n  //   }\n  // }\n\n  /**\n   *  =====================\n   *  Methods for modelling\n   *  =====================\n   */\n\n  // app.getWidget = function (key, label) {\n  //   var url = 'https://raw.githubusercontent.com/jnuren12/jnuren12.github.io/master/test/'\n  //   url += key + '.json'\n  //   if ('caches' in window) {\n  //     caches.match(url).then(response => {\n  //       if (response) {\n  //         response.json().then(json => {\n  //           if (app.hasRequestPending) {\n  //             console.log('[App] :D Widget updated from cache')\n  //             json.key = key\n  //             json.label = label\n  //             app.updateWidgetCard(json)\n  //           }\n  //         })\n  //       }\n  //     })\n  //   }\n  //   app.hasRequestPending = true\n  //   var request = new XMLHttpRequest()\n  //   request.onreadystatechange = () => {\n  //     if (request.readyState === XMLHttpRequest.DONE) {\n  //       if (request.status === 200) {\n  //         var response = JSON.parse(request.response)\n  //         response.key = key\n  //         response.label = label\n  //         app.hasRequestPending = false\n  //         console.log('[App] :D Widget updated from network')\n  //         app.updateWidgetCard(response)\n  //       }\n  //     }\n  //   }\n  //   request.open('GET', url)\n  //   request.send()\n  // }\n\n  // app.updateWidgets = function () {\n  //   var keys = Object.keys(app.visibleCards)\n  //   keys.forEach(key => {\n  //     app.getWidget(key)\n  //   })\n  // }\n  // app.saveSelectedWidgets = function () {\n  //   var selectedWidgets = JSON.stringify(app.selectedWidgets)\n  //   // FIXME: localStorage is not good in production\n  //   localStorage.selectedWidgets = selectedWidgets\n  // }\n\n  /**\n   *  =======================\n   *  Code for initialization\n   *  =======================\n   *\n   *  NOTE: localStorage is not good for production applications,\n   *    for it is a synchronous API and has serious performance\n   *    implications.\n   */\n\n  // app.selectedWidgets = localStorage.selectedWidgets\n  // if (app.selectedWidgets) {\n  //   app.selectedWidgets = JSON.parse(app.selectedWidgets)\n  //   app.selectedWidgets.forEach(widget => {\n  //     app.getWidget(widget.key, widget.label)\n  //   })\n  // } else {\n  //   app.updateWidgetCard(initWidget)\n  //   app.selectedWidgets = [\n  //     {key: initWidget.key, label: initWidget.label}\n  //   ]\n  //   app.saveSelectedWidgets()\n  // }\n// })()\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/home/anqurvanillapy/Dev/web/apps/jeezhu-webapp/src/js/app.js\":[function(require,module,exports){\n/**\n *  ==================================\n *  Code for Framework7 initialization\n *  ==================================\n */\n\nvar appF7 = new Framework7({\n  material: true,\n  modalTitle: 'Jeezhu'\n})\n\nvar appF7MainView = appF7.addView('.view-main', {})\n\nvar $$ = Dom7\n\n$$('.pull-to-refresh-content').on('refresh', function (page) {\n  setTimeout(function () { appF7.pullToRefreshDone() }, 1000)\n})\n\n/**\n *  =================\n *  Code for Vue todo\n *  =================\n */\n\nnew Vue({\n  el: '#todo',\n  data: {\n    newTodo: '',\n    todos: [\n      { text: 'Review the lessons!' }\n    ]\n  },\n  methods: {\n    addTodo: function () {\n      var text = this.newTodo.trim()\n      if (text) {\n        this.todos.push({ text: text })\n        this.newTodo = ''\n      }\n    },\n    removeTodo: function (index) {\n      this.todos.splice(index, 1)\n    }\n  }\n})\n\n/**\n *  ==============================\n *  Preview code from PWA examples\n *  ==============================\n */\n\n// (function () {\n//   'use strict'\n\n  /**\n   *  =============\n   *  App meta data\n   *  =============\n   */\n\n  // var initWidget = {\n  //   key: 'recmenu',\n  //   label: '菜单推荐',\n  //   content: [ '叉烧滑蛋饭' ]\n  // }\n\n  // var app = {\n  //   isLoading: true,\n  //   hasRequestPending: false,\n  //   visibleCards: {},\n  //   selectedWidgets: [],\n  //   spinner: document.querySelector('.loader'),\n  //   cardTemplate: document.querySelector('.cardTemplate'),\n  //   container: document.querySelector('.main'),\n  //   addDialog: document.querySelector('.dialog-container')\n  // }\n\n  /**\n   *  =================================\n   *  Event listeners for UI components\n   *  =================================\n   */\n\n  // document.getElementById('butAdd').addEventListener('click', function () {\n  //   app.toggleAddDialog(true)\n  // })\n\n  // document.getElementById('butAddWidget').addEventListener('click', function () {\n  //   var select = document.getElementById('selectWidgetToAdd')\n  //   var selected = select.options[select.selectedIndex]\n  //   var key = selected.value\n  //   var label = selected.textContent\n  //   app.getWidget(key, label)\n  //   app.selectedWidgets.push({key: key, label: label})\n  //   app.saveSelectedWidgets()\n  //   app.toggleAddDialog(false)\n  // })\n\n  // document.getElementById('butAddCancel').addEventListener('click', function () {\n  //   app.toggleAddDialog(false)\n  // })\n\n  /**\n   *  ======================================\n   *  Methods for updating and refreshing UI\n   *  ======================================\n   */\n\n  // app.toggleAddDialog = function (visible) {\n  //   if (visible) {\n  //     app.addDialog.classList.add('dialog-container-visible')\n  //   } else {\n  //     app.addDialog.classList.remove('dialog-container-visible')\n  //   }\n  // }\n\n  // app.updateWidgetCard = function (data) {\n  //   var card = app.visibleCards[data.key]\n  //   if (!card) {\n  //     card = app.cardTemplate.cloneNode(true)\n  //     card.classList.remove('cardTemplate')\n  //     card.querySelector('.card-title').textContent = data.label\n  //     card.removeAttribute('hidden')\n  //     app.container.appendChild(card)\n  //     app.visibleCards[data.key] = card\n  //   }\n  //   var pick = data.content\n  //   pick = pick[Math.floor(Math.random() * pick.length)]\n  //   card.querySelector('.card-body').textContent = pick\n  //   if (app.isLoading) {\n  //     app.spinner.setAttribute('hidden', true)\n  //     app.container.removeAttribute('hidden')\n  //     app.isLoading = false\n  //   }\n  // }\n\n  /**\n   *  =====================\n   *  Methods for modelling\n   *  =====================\n   */\n\n  // app.getWidget = function (key, label) {\n  //   var url = 'https://raw.githubusercontent.com/jnuren12/jnuren12.github.io/master/test/'\n  //   url += key + '.json'\n  //   if ('caches' in window) {\n  //     caches.match(url).then(response => {\n  //       if (response) {\n  //         response.json().then(json => {\n  //           if (app.hasRequestPending) {\n  //             console.log('[App] :D Widget updated from cache')\n  //             json.key = key\n  //             json.label = label\n  //             app.updateWidgetCard(json)\n  //           }\n  //         })\n  //       }\n  //     })\n  //   }\n  //   app.hasRequestPending = true\n  //   var request = new XMLHttpRequest()\n  //   request.onreadystatechange = () => {\n  //     if (request.readyState === XMLHttpRequest.DONE) {\n  //       if (request.status === 200) {\n  //         var response = JSON.parse(request.response)\n  //         response.key = key\n  //         response.label = label\n  //         app.hasRequestPending = false\n  //         console.log('[App] :D Widget updated from network')\n  //         app.updateWidgetCard(response)\n  //       }\n  //     }\n  //   }\n  //   request.open('GET', url)\n  //   request.send()\n  // }\n\n  // app.updateWidgets = function () {\n  //   var keys = Object.keys(app.visibleCards)\n  //   keys.forEach(key => {\n  //     app.getWidget(key)\n  //   })\n  // }\n  // app.saveSelectedWidgets = function () {\n  //   var selectedWidgets = JSON.stringify(app.selectedWidgets)\n  //   // FIXME: localStorage is not good in production\n  //   localStorage.selectedWidgets = selectedWidgets\n  // }\n\n  /**\n   *  =======================\n   *  Code for initialization\n   *  =======================\n   *\n   *  NOTE: localStorage is not good for production applications,\n   *    for it is a synchronous API and has serious performance\n   *    implications.\n   */\n\n  // app.selectedWidgets = localStorage.selectedWidgets\n  // if (app.selectedWidgets) {\n  //   app.selectedWidgets = JSON.parse(app.selectedWidgets)\n  //   app.selectedWidgets.forEach(widget => {\n  //     app.getWidget(widget.key, widget.label)\n  //   })\n  // } else {\n  //   app.updateWidgetCard(initWidget)\n  //   app.selectedWidgets = [\n  //     {key: initWidget.key, label: initWidget.label}\n  //   ]\n  //   app.saveSelectedWidgets()\n  // }\n// })()\n\n},{}]},{},[\"/home/anqurvanillapy/Dev/web/apps/jeezhu-webapp/src/js/app.js\"])\n\n"],"sourceRoot":"/source/"}